/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord;
import io.cattle.platform.db.jooq.converter.DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigItemStatusTable extends TableImpl<ConfigItemStatusRecord> {

    private static final long serialVersionUID = -1272483914;

    /**
     * The reference instance of <code>cattle.config_item_status</code>
     */
    public static final ConfigItemStatusTable CONFIG_ITEM_STATUS = new ConfigItemStatusTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigItemStatusRecord> getRecordType() {
        return ConfigItemStatusRecord.class;
    }

    /**
     * The column <code>cattle.config_item_status.id</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.config_item_status.name</code>.
     */
    public final TableField<ConfigItemStatusRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>cattle.config_item_status.requested_version</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> REQUESTED_VERSION = createField("requested_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>cattle.config_item_status.applied_version</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> APPLIED_VERSION = createField("applied_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>cattle.config_item_status.source_version</code>.
     */
    public final TableField<ConfigItemStatusRecord, String> SOURCE_VERSION = createField("source_version", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.config_item_status.requested_updated</code>.
     */
    public final TableField<ConfigItemStatusRecord, Date> REQUESTED_UPDATED = createField("requested_updated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new DateConverter());

    /**
     * The column <code>cattle.config_item_status.applied_updated</code>.
     */
    public final TableField<ConfigItemStatusRecord, Date> APPLIED_UPDATED = createField("applied_updated", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.config_item_status.agent_id</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> AGENT_ID = createField("agent_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.config_item_status.account_id</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.config_item_status.service_id</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.config_item_status.resource_id</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> RESOURCE_ID = createField("resource_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.config_item_status.resource_type</code>.
     */
    public final TableField<ConfigItemStatusRecord, String> RESOURCE_TYPE = createField("resource_type", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.config_item_status.environment_id</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> STACK_ID = createField("environment_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.config_item_status.host_id</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> HOST_ID = createField("host_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.config_item_status.deployment_unit_id</code>.
     */
    public final TableField<ConfigItemStatusRecord, Long> DEPLOYMENT_UNIT_ID = createField("deployment_unit_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>cattle.config_item_status</code> table reference
     */
    public ConfigItemStatusTable() {
        this("config_item_status", null);
    }

    /**
     * Create an aliased <code>cattle.config_item_status</code> table reference
     */
    public ConfigItemStatusTable(String alias) {
        this(alias, CONFIG_ITEM_STATUS);
    }

    private ConfigItemStatusTable(String alias, Table<ConfigItemStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfigItemStatusTable(String alias, Table<ConfigItemStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConfigItemStatusRecord, Long> getIdentity() {
        return Keys.IDENTITY_CONFIG_ITEM_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigItemStatusRecord> getPrimaryKey() {
        return Keys.KEY_CONFIG_ITEM_STATUS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigItemStatusRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigItemStatusRecord>>asList(Keys.KEY_CONFIG_ITEM_STATUS_PRIMARY, Keys.KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_RESOURCE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ConfigItemStatusRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ConfigItemStatusRecord, ?>>asList(Keys.FK_CONFIG_ITEM__NAME, Keys.FK_CONFIG_ITEM__AGENT_ID, Keys.FK_CONFIG_ITEM__ACCOUNT_ID, Keys.FK_CONFIG_ITEM__SERVICE_ID, Keys.FK_CONFIG_ITEM__ENVIRONMENT_ID, Keys.FK_CONFIG_ITEM__HOST_ID, Keys.FK_CONFIG_ITEM__DEPLOYMENT_UNIT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigItemStatusTable as(String alias) {
        return new ConfigItemStatusTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfigItemStatusTable rename(String name) {
        return new ConfigItemStatusTable(name, null);
    }
}
