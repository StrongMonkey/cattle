/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables.records;


import io.cattle.platform.core.model.Host;
import io.cattle.platform.core.model.tables.HostTable;
import io.cattle.platform.db.jooq.utils.TableRecordJaxb;

import java.util.Date;
import java.util.Map;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "host", schema = "cattle")
public class HostRecord extends UpdatableRecordImpl<HostRecord> implements TableRecordJaxb, Host {

    private static final long serialVersionUID = 142978522;

    /**
     * Setter for <code>cattle.host.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cattle.host.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 19)
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cattle.host.name</code>.
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cattle.host.name</code>.
     */
    @Column(name = "name", length = 255)
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cattle.host.account_id</code>.
     */
    @Override
    public void setAccountId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>cattle.host.account_id</code>.
     */
    @Column(name = "account_id", precision = 19)
    @Override
    public Long getAccountId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>cattle.host.kind</code>.
     */
    @Override
    public void setKind(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>cattle.host.kind</code>.
     */
    @Column(name = "kind", nullable = false, length = 255)
    @Override
    public String getKind() {
        return (String) get(3);
    }

    /**
     * Setter for <code>cattle.host.uuid</code>.
     */
    @Override
    public void setUuid(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>cattle.host.uuid</code>.
     */
    @Column(name = "uuid", unique = true, nullable = false, length = 128)
    @Override
    public String getUuid() {
        return (String) get(4);
    }

    /**
     * Setter for <code>cattle.host.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>cattle.host.description</code>.
     */
    @Column(name = "description", length = 1024)
    @Override
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>cattle.host.state</code>.
     */
    @Override
    public void setState(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>cattle.host.state</code>.
     */
    @Column(name = "state", nullable = false, length = 128)
    @Override
    public String getState() {
        return (String) get(6);
    }

    /**
     * Setter for <code>cattle.host.created</code>.
     */
    @Override
    public void setCreated(Date value) {
        set(7, value);
    }

    /**
     * Getter for <code>cattle.host.created</code>.
     */
    @Column(name = "created")
    @Override
    public Date getCreated() {
        return (Date) get(7);
    }

    /**
     * Setter for <code>cattle.host.removed</code>.
     */
    @Override
    public void setRemoved(Date value) {
        set(8, value);
    }

    /**
     * Getter for <code>cattle.host.removed</code>.
     */
    @Column(name = "removed")
    @Override
    public Date getRemoved() {
        return (Date) get(8);
    }

    /**
     * Setter for <code>cattle.host.remove_time</code>.
     */
    @Override
    public void setRemoveTime(Date value) {
        set(9, value);
    }

    /**
     * Getter for <code>cattle.host.remove_time</code>.
     */
    @Column(name = "remove_time")
    @Override
    public Date getRemoveTime() {
        return (Date) get(9);
    }

    /**
     * Setter for <code>cattle.host.data</code>.
     */
    @Override
    public void setData(Map<String,Object> value) {
        set(10, value);
    }

    /**
     * Getter for <code>cattle.host.data</code>.
     */
    @Column(name = "data", length = 16777215)
    @Override
    public Map<String,Object> getData() {
        return (Map<String,Object>) get(10);
    }

    /**
     * Setter for <code>cattle.host.uri</code>.
     */
    @Override
    public void setUri(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>cattle.host.uri</code>.
     */
    @Column(name = "uri", length = 255)
    @Override
    public String getUri() {
        return (String) get(11);
    }

    /**
     * Setter for <code>cattle.host.compute_free</code>.
     */
    @Override
    public void setComputeFree(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>cattle.host.compute_free</code>.
     */
    @Column(name = "compute_free", precision = 19)
    @Override
    public Long getComputeFree() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>cattle.host.compute_total</code>.
     */
    @Override
    public void setComputeTotal(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>cattle.host.compute_total</code>.
     */
    @Column(name = "compute_total", precision = 19)
    @Override
    public Long getComputeTotal() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>cattle.host.agent_id</code>.
     */
    @Override
    public void setAgentId(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>cattle.host.agent_id</code>.
     */
    @Column(name = "agent_id", precision = 19)
    @Override
    public Long getAgentId() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>cattle.host.physical_host_id</code>.
     */
    @Override
    public void setPhysicalHostId(Long value) {
        set(15, value);
    }

    /**
     * Getter for <code>cattle.host.physical_host_id</code>.
     */
    @Column(name = "physical_host_id", precision = 19)
    @Override
    public Long getPhysicalHostId() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>cattle.host.is_public</code>.
     */
    @Override
    public void setIsPublic(Boolean value) {
        set(16, value);
    }

    /**
     * Getter for <code>cattle.host.is_public</code>.
     */
    @Column(name = "is_public", nullable = false, precision = 1)
    @Override
    public Boolean getIsPublic() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>cattle.host.agent_state</code>.
     */
    @Override
    public void setAgentState(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>cattle.host.agent_state</code>.
     */
    @Column(name = "agent_state", length = 128)
    @Override
    public String getAgentState() {
        return (String) get(17);
    }

    /**
     * Setter for <code>cattle.host.local_storage_mb</code>.
     */
    @Override
    public void setLocalStorageMb(Long value) {
        set(18, value);
    }

    /**
     * Getter for <code>cattle.host.local_storage_mb</code>.
     */
    @Column(name = "local_storage_mb", precision = 19)
    @Override
    public Long getLocalStorageMb() {
        return (Long) get(18);
    }

    /**
     * Setter for <code>cattle.host.memory</code>.
     */
    @Override
    public void setMemory(Long value) {
        set(19, value);
    }

    /**
     * Getter for <code>cattle.host.memory</code>.
     */
    @Column(name = "memory", precision = 19)
    @Override
    public Long getMemory() {
        return (Long) get(19);
    }

    /**
     * Setter for <code>cattle.host.milli_cpu</code>.
     */
    @Override
    public void setMilliCpu(Long value) {
        set(20, value);
    }

    /**
     * Getter for <code>cattle.host.milli_cpu</code>.
     */
    @Column(name = "milli_cpu", precision = 19)
    @Override
    public Long getMilliCpu() {
        return (Long) get(20);
    }

    /**
     * Setter for <code>cattle.host.environment_id</code>.
     */
    @Override
    public void setStackId(Long value) {
        set(21, value);
    }

    /**
     * Getter for <code>cattle.host.environment_id</code>.
     */
    @Column(name = "environment_id", precision = 19)
    @Override
    public Long getStackId() {
        return (Long) get(21);
    }

    /**
     * Setter for <code>cattle.host.remove_after</code>.
     */
    @Override
    public void setRemoveAfter(Date value) {
        set(22, value);
    }

    /**
     * Getter for <code>cattle.host.remove_after</code>.
     */
    @Column(name = "remove_after")
    @Override
    public Date getRemoveAfter() {
        return (Date) get(22);
    }

    /**
     * Setter for <code>cattle.host.host_template_id</code>.
     */
    @Override
    public void setHostTemplateId(Long value) {
        set(23, value);
    }

    /**
     * Getter for <code>cattle.host.host_template_id</code>.
     */
    @Column(name = "host_template_id", precision = 19)
    @Override
    public Long getHostTemplateId() {
        return (Long) get(23);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(Host from) {
        setId(from.getId());
        setName(from.getName());
        setAccountId(from.getAccountId());
        setKind(from.getKind());
        setUuid(from.getUuid());
        setDescription(from.getDescription());
        setState(from.getState());
        setCreated(from.getCreated());
        setRemoved(from.getRemoved());
        setRemoveTime(from.getRemoveTime());
        setData(from.getData());
        setUri(from.getUri());
        setComputeFree(from.getComputeFree());
        setComputeTotal(from.getComputeTotal());
        setAgentId(from.getAgentId());
        setPhysicalHostId(from.getPhysicalHostId());
        setIsPublic(from.getIsPublic());
        setAgentState(from.getAgentState());
        setLocalStorageMb(from.getLocalStorageMb());
        setMemory(from.getMemory());
        setMilliCpu(from.getMilliCpu());
        setStackId(from.getStackId());
        setRemoveAfter(from.getRemoveAfter());
        setHostTemplateId(from.getHostTemplateId());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends Host> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HostRecord
     */
    public HostRecord() {
        super(HostTable.HOST);
    }

    /**
     * Create a detached, initialised HostRecord
     */
    public HostRecord(Long id, String name, Long accountId, String kind, String uuid, String description, String state, Date created, Date removed, Date removeTime, Map<String,Object> data, String uri, Long computeFree, Long computeTotal, Long agentId, Long physicalHostId, Boolean isPublic, String agentState, Long localStorageMb, Long memory, Long milliCpu, Long environmentId, Date removeAfter, Long hostTemplateId) {
        super(HostTable.HOST);

        set(0, id);
        set(1, name);
        set(2, accountId);
        set(3, kind);
        set(4, uuid);
        set(5, description);
        set(6, state);
        set(7, created);
        set(8, removed);
        set(9, removeTime);
        set(10, data);
        set(11, uri);
        set(12, computeFree);
        set(13, computeTotal);
        set(14, agentId);
        set(15, physicalHostId);
        set(16, isPublic);
        set(17, agentState);
        set(18, localStorageMb);
        set(19, memory);
        set(20, milliCpu);
        set(21, environmentId);
        set(22, removeAfter);
        set(23, hostTemplateId);
    }
}
