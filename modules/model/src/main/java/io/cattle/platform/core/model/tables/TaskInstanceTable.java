/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.TaskInstanceRecord;
import io.cattle.platform.db.jooq.converter.DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskInstanceTable extends TableImpl<TaskInstanceRecord> {

    private static final long serialVersionUID = -537999700;

    /**
     * The reference instance of <code>cattle.task_instance</code>
     */
    public static final TaskInstanceTable TASK_INSTANCE = new TaskInstanceTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskInstanceRecord> getRecordType() {
        return TaskInstanceRecord.class;
    }

    /**
     * The column <code>cattle.task_instance.id</code>.
     */
    public final TableField<TaskInstanceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.task_instance.name</code>.
     */
    public final TableField<TaskInstanceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.task_instance.task_id</code>.
     */
    public final TableField<TaskInstanceRecord, Long> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.task_instance.start_time</code>.
     */
    public final TableField<TaskInstanceRecord, Date> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new DateConverter());

    /**
     * The column <code>cattle.task_instance.end_time</code>.
     */
    public final TableField<TaskInstanceRecord, Date> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.task_instance.exception</code>.
     */
    public final TableField<TaskInstanceRecord, String> EXCEPTION = createField("exception", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.task_instance.server_id</code>.
     */
    public final TableField<TaskInstanceRecord, String> SERVER_ID = createField("server_id", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * Create a <code>cattle.task_instance</code> table reference
     */
    public TaskInstanceTable() {
        this("task_instance", null);
    }

    /**
     * Create an aliased <code>cattle.task_instance</code> table reference
     */
    public TaskInstanceTable(String alias) {
        this(alias, TASK_INSTANCE);
    }

    private TaskInstanceTable(String alias, Table<TaskInstanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private TaskInstanceTable(String alias, Table<TaskInstanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TaskInstanceRecord, Long> getIdentity() {
        return Keys.IDENTITY_TASK_INSTANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TaskInstanceRecord> getPrimaryKey() {
        return Keys.KEY_TASK_INSTANCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TaskInstanceRecord>> getKeys() {
        return Arrays.<UniqueKey<TaskInstanceRecord>>asList(Keys.KEY_TASK_INSTANCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TaskInstanceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TaskInstanceRecord, ?>>asList(Keys.FK_TASK_INSTANCE__TASK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskInstanceTable as(String alias) {
        return new TaskInstanceTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskInstanceTable rename(String name) {
        return new TaskInstanceTable(name, null);
    }
}
