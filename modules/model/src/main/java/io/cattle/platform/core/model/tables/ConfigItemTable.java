/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.ConfigItemRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigItemTable extends TableImpl<ConfigItemRecord> {

    private static final long serialVersionUID = 888914441;

    /**
     * The reference instance of <code>cattle.config_item</code>
     */
    public static final ConfigItemTable CONFIG_ITEM = new ConfigItemTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigItemRecord> getRecordType() {
        return ConfigItemRecord.class;
    }

    /**
     * The column <code>cattle.config_item.id</code>.
     */
    public final TableField<ConfigItemRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.config_item.name</code>.
     */
    public final TableField<ConfigItemRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>cattle.config_item.source_version</code>.
     */
    public final TableField<ConfigItemRecord, String> SOURCE_VERSION = createField("source_version", org.jooq.impl.SQLDataType.VARCHAR.length(1024).nullable(false), this, "");

    /**
     * Create a <code>cattle.config_item</code> table reference
     */
    public ConfigItemTable() {
        this("config_item", null);
    }

    /**
     * Create an aliased <code>cattle.config_item</code> table reference
     */
    public ConfigItemTable(String alias) {
        this(alias, CONFIG_ITEM);
    }

    private ConfigItemTable(String alias, Table<ConfigItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private ConfigItemTable(String alias, Table<ConfigItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ConfigItemRecord, Long> getIdentity() {
        return Keys.IDENTITY_CONFIG_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigItemRecord> getPrimaryKey() {
        return Keys.KEY_CONFIG_ITEM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigItemRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigItemRecord>>asList(Keys.KEY_CONFIG_ITEM_PRIMARY, Keys.KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ConfigItemTable as(String alias) {
        return new ConfigItemTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ConfigItemTable rename(String name) {
        return new ConfigItemTable(name, null);
    }
}
