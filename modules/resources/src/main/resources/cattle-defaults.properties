# From ./META-INF/cattle/agent-server/defaults.properties

# 2 minute
agent.ping.stats.every=24
# 1 minute
agent.ping.resources.every=12
# 15 seconds
agent.ping.instances.every=3

agent.ping.reconnect.after.failed.count=6
agent.ping.timeout.seconds=15

task.agent.ping.schedule=5

task.hazelcast.lock.schedule=15

task.evacuate.hosts.schedule=60

agent.resource.monitor.cache.resource.seconds=300

# From ./META-INF/cattle/allocator-server/cattle-defaults.properties

simple.allocator.lock.wait=2500
port.scheduler.image.version=v0.6.0

# From ./META-INF/cattle/api-server/cattle-defaults.properties

api.sub.ping.interval.millis=5000
api.sub.max.pings=8640

api.pub.default.publish.pattern=^reply\..*$
api.pub.sub.servlet.timeout.ms=0
subscribe.max.queued.messages=100
agent.packages.types=pyagent
agent.packages.pyagent=host-api,python-agent

config.item.ignore.filesystem=false
config.item.ignore.prefixes=.
sync.source.version.lock.wait.millis=60000
task.retry.timeout.schedule=1

task.bad.data.schedule=3600
task.table.cleanup.schedule=3600

task.config.item.migration.schedule=900
task.config.item.sync.schedule=15
task.database.cleanup.schedule=900
task.config.item.source.version.sync.schedule=3600

item.context.network.info.items=iptables,metadata
item.context.vnet.client.info.items=iptables
item.context.link.info.items=iptables
item.context.agent.info.items=agent-instance-startup,node-services
item.context.services.info.items=services
item.context.ipsec.info.items=ipsec,ipsec-hosts
item.context.ipsec.hosts.info.items=ipsec-hosts
item.context.host.port.info.items=host-iptables
item.context.host.route.info.items=host-iptables,host-routes
item.context.metadata.info.items=metadata
item.context.metadata.redirect.info.items=host-iptables
item.context.host.api.key.info.items=host-config
item.context.cluster.info.items=cluster
item.context.service.metadata.info.items=hosts
item.context.config.url.info.items=agent-instance-startup

default.network.domain=compute.localdomain
default.hostname.prefix=ip-

default.local.network.domain=compute.internal
default.local.hostname.prefix=ip-

default.services.domain=rancher.io

config.item.name.preload=reconcile,stack-reconcile,service-endpoints-update,host-endpoints-update,deployment-unit-update
api.security.enabled=false

api.ignore.paths=/static,/ping,/healthcheck

# 5 Minutes
api.show.removed.for.seconds=-300

api.event.change.exclude.types=publish

api.allow.client.override=false
exec.agent.path=/v1/exec/
host.logs.path=/v1/logs/
host.proxy.path=/v1/container-proxy/
host.socketproxy.path=/v1/dockersocket/

console.agent.path=/v1/console/

# UI Stuff
settings.public=rancher.compose.linux.url, \
  rancher.compose.darwin.url, \
  rancher.compose.windows.url, \
  rancher.compose.version, \
  rancher.cli.linux.url, \
  rancher.cli.darwin.url, \
  rancher.cli.windows.url, \
  rancher.cli.version, \
  api.ui.index, \
  rancher.server.image, \
  rancher.server.version, \
  cattle.version, \
  docker.machine.version, \
  go.machine.service.version, \
  vm.enabled, \
  swarm.tls.port, \
  engine.install.url, \
  catalog.url, \
  supported.docker.range, \
  newest.docker.version, \
  telemetry.opt, \
  api.auth.local.validate.description, \
  lb.instance.image, \
  account.version, \
  project.template.default.name, \
  ui.feedback.form, \
  ui.show.system, \
  ui.show.custom.host, \
  api.host

vm.enabled=false
ui.pl=rancher
ui.show.system=default_hide
ui.show.custom.host=true
engine.install.url=https://releases.rancher.com/install-docker/1.12.sh
account.version=2
supported.docker.range=~v1.10.3 || ~v1.12.3 || ~v1.13.0 || ~v17.03.0
newest.docker.version=v17.04.0

# From ./META-INF/cattle/bootstrap/cattle-defaults.properties

logback.config=logback/logback.xml
logback.pattern=%date{ISO8601} %-5.5p [%X{processUuid}:%X{processId}] [%X{prettyResource}] [%X{logicPath}] [%X{agentId}] [%-15.15t] [%-36.36logger{36}] %m %xEx%n
logback.console.pattern=%date{ISO8601} %-5.5p %X{prettyResource} %X{logicPath} [%t] [%logger{36}] %m %xEx%n
logback.event.pattern=%m%n
logback.file.name.pattern=.%d{yyyy-MM-dd}.%i.log.gz
logback.root.level=DEBUG
logback.aggregation.level=INFO
logback.jooq.level=WARN
logback.console.level=INFO
logback.console.status.level=INFO
logback.other.level=WARN
logback.liquibase.level=WARN
logback.max.history=5
logback.log.dir=${cattle.home}

logback.output.console=true
logback.output.error=true
logback.output.events=false
logback.output.file=true
logback.output.logstash.file=false
logback.output.logstash.syslog=false
logback.output.logstash.syslog.host=localhost
logback.output.logstash.syslog.port=5544
logback.output.syslog=false
logback.output.gelf=false
logback.output.gelf.host=localhost
logback.output.gelf.port=12201




# From ./META-INF/cattle/core-model/cattle-defaults.properties

object.link.name.agentrecord.resourceaccountid.override=resourceAgents

# max rows to delete in a single transaction
cleanup.query_limit.rows=1000

# 2 days
main_tables.purge.after.seconds=172800
# 12 hours
events.purge.after.seconds=43200
# 1 hour
process_instance.purge.after.seconds=3600
# 30 Days ~ 1 months
audit_log.purge.after.seconds=2592000
# 1 Day
service_log.purge.after.seconds=86400

# From ./META-INF/cattle/defaults/cattle-defaults.properties

process.replay.batch.size=50000

eventing.pool.process.count=100

task.process.replay.schedule=15

idempotent.retry.count=2

host.api.auth.header=Authorization
host.api.auth.header.value=BEARER %s
host.api.keygen.on.startup=${ssh.keygen.on.startup}
host.api.proxy.backend.path=/v1/connectbackend

host.stats.path=/v1/stats
link.hoststats.path=/v1/hoststats
link.containerstats.path=/v1/containerstats
default.lock.wait.millis=10000
global.pool.maxidle=50
global.pool.maxtotal=1000
global.pool.maxwait=1000
global.pool.maxwaitmillis=1000
global.pool.testonborrow=false
global.pool.testwhileidle=true
global.pool.minevictableidletimemillis=300000
global.pool.timebetweenevictionrunsmillis=60000
global.pool.jmxnamebase=org.apache.commons.pool2:type=GenericObjectPool,name=
cattle.http.port=8080
cattle.http.proxied.port=8081
cattle.https.port=0
cattle.url.path=/v1
host.api.proxy.scheme=ws

cert.expiry.days=3650
external.template.register.lock.wait.millis=2000
task.initial.delay.seconds=15
jwt.default.subject=cattle
jwt.default.issuer=http://cattle.io
jwt.default.expiration.seconds=300
# 16 hours
host.proxy.jwt.expiration.seconds=57600

project.template.default.name=Cattle

bad.data.batch.size=1000

startup.priority=LockDelegatorImpl,AnnotatedListenerRegistration,EventService,DefaultObjectMetaDataManager,JsonDefaultsProvider,ObjectDefaultsPostInstantiationHandler,DefaultProcessManager,SampleDataStartupV3,TaskManagerImpl,ServiceAccountCreateStartup,WebsocketProxyLauncher,SampleDataStartupV15

container.event.max.size=0

pool.processeventexecutorservice.core.size=3
pool.processeventexecutorservice.max.size=10
pool.processeventexecutorservice.keep.alive=120
pool.processeventexecutorservice.queue.size=0

pool.processnonblockingexecutorservice.core.size=5
pool.processnonblockingexecutorservice.max.size=5
pool.processnonblockingexecutorservice.keep.alive=1200
pool.processnonblockingexecutorservice.queue.size=-1
pool.processnonblockingexecutorservice.priority.queue=true

pool.processblockingexecutorservice.core.size=35
pool.processblockingexecutorservice.max.size=35
pool.processblockingexecutorservice.keep.alive=1200
pool.processblockingexecutorservice.queue.size=-1
pool.processblockingexecutorservice.priority.queue=true

pool.coreexecutorservice.core.size=15
pool.coreexecutorservice.max.size=15
pool.coreexecutorservice.keep.alive=120
pool.coreexecutorservice.queue.size=-1

pool.eventexecutorservice.core.size=5
pool.eventexecutorservice.max.size=5
pool.eventexecutorservice.keep.alive=120
pool.eventexecutorservice.queue.size=-1

loop.default.execution.token.every.millis=2000
loop.default.execution.tokens.max=1

loop.service-reconcile.execution.token.every.millis=5000
loop.service-reconcile.execution.tokens.max=10
loop.deployment-unit-reconcile.execution.token.every.millis=2000
loop.deployment-unit-reconcile.execution.tokens.max=10

api.interceptor.config=
api.interceptor.config.file=config.json

secrets.api.service.executable=secrets-api
secrets.api.execute=false
secrets.api.local.key.path=.
secrets.api.local.key.name=rancher
secrets.url=http://localhost:8181
secrets.backend=localkey

host.remove.delay.seconds=-1
# 15 minutes
host.remove.delay.startup.seconds=900

cache.metadata=true
cache.metadata.lock=true

# 1 hour
task.upgrade.schedule.schedule=3600
# 1 minute
task.run.scheduled.schedule=60
# One day
default.schedule.upgrade.delay.minutes=1440
concurrent.scheduled.upgrades=5
upgrade.manager=mandatory

deployment.unit.batch.size=200

process.save.terminating=true

healthcheck.default.initializing.timeout=120000
# From ./META-INF/cattle/encryption/cattle-defaults.properties

api.encryption.encrypter=AES256
api.encryption.hasher=SHA256
api.encryption.password=PBKDF2
api.encryption.key=keys.properties

# From ./META-INF/cattle/iaas-api/cattle-defaults.properties


api.allow.github.proxy=true
api.auth.jwt.token.expiry=57600000
api.security.role.priority.owner=0
api.security.role.priority.member=1
api.security.role.priority.restricted=2
api.security.role.priority.readonly=3

api.request.handler.list=\
    Scripts,\
    BodyParserRequestHandler,\
    ConfigurableRequestOptionsParser,\
    RequestReRouterHandler,\
    NoAuthenticationProxy,\
    ApiAuthenticator,\
    SecretsApiRequestHandler,\
    GenericWhitelistedProxy,\
    AddClientIpHeader,\
    IdFormatterRequestHandler,\
    CSRFCookieHandler,\
    PostChildLinkHandler,\
    ParseCollectionAttributes,\
    VersionsHandler,\
    VersionHandler,\
    SchemasHandler,\
    ValidationHandler,\
    TransformationHandler, \
    ResourceManagerReferenceValidator,\
    ReadWriteApiHandler,\
    NotFoundHandler,\
    EventNotificationHandler,\
    ResponseObjectConverter,\
    ExceptionHandler,\
    JsonResponseWriter,\
    HtmlResponseWriter,\
    DeferredActionsHandler,\
    AuditLogsRequestHandler

api.auth.realm=Enter API access key and secret key as username and password
api.auth.header.enabled=false
agent.filter.assign.uri=true
agent.filter.default.uri.reverse.dns=true
agent.filter.default.uri=ssh://%s@%s:22
agent.filter.default.user=root

account.by.key.credential.types=agentApiKey, apiKey, usernamePassword

account.type.admin.list.all.accounts=true
account.type.admin.list.all.settings=true
account.type.admin.all.accounts=true
account.type.admin.plain.id.option=true
account.type.admin.role.option=true
account.type.agent.plain.id.option=true
account.type.superadmin.list.all.accounts=true
account.type.superadmin.list.all.settings=true
account.type.superadmin.all.accounts=true
account.type.superadmin.plain.id.option=true
account.type.superadmin.role.option=true
account.type.superadmin.subscription.style=raw
account.type.service.list.all.accounts=true
account.type.service.list.all.settings=true
account.type.service.all.accounts=true
account.type.service.plain.id.option=true
account.type.service.subscription.style=raw

task.resource.change.publish.schedule=1

api.redirect.to.ui=true

api.request.options=_plainId,_role,_actionLinks,_removed

console.url.format.websocket-vnc=${static}/vnc.html?path=${path}&host=${host}&port=${port}&password=${password}&autoconnect=1

api.proxy.allow=true
api.proxy.whitelist=*.amazonaws.com,*.amazonaws.com.cn,forums.rancher.com,api.exoscale.ch,api.digitalocean.com

api.github.scheme=https://

bootstrap.source=registration/bootstrap.sh


# From ./META-INF/cattle/process/cattle-defaults.properties

provisioning.enabled=true

process.account.create.create.credential=true
process.account.create.create.credential.default.kind=apiKey
process.account.create.create.credential.account.kinds=agent

process.credential.create.bad.characters=[O0lI+/=]

process.agent.create.create.account=true

activate.by.default.account=true
activate.by.default.agent=true
activate.by.default.credential=true
activate.by.default.externalHandler=true
activate.by.default.externalHandlerProcess=true
activate.by.default.externalHandlerExternalHandlerProcessMap=true
activate.by.default.hostIpAddressMap=true
activate.by.default.ipAddress=true
activate.by.default.ipAddressNicMap=true
activate.by.default.ipPool=true
activate.by.default.network=true
activate.by.default.storagePool=true
activate.by.default.register=true
activate.by.default.subnet=true
activate.by.default.userPreference=true

event.data.credential=registry
event.data.instance=registryCredential|networkContainer
event.data.volume=storagePools
event.data.volumeStoragePoolMap=volume[${event.data.volume}]|storagePool
event.data.stack=

agent.config.items=host-config,pyagent,configscripts
agent.disconnect.after.seconds=180

# If negative, random 0-abs(value)
object.remove.time.delay.seconds=0

process.service.blocking=true
process.deploymentunit.blocking=true

process.stack.blocking=true
process.containerevent.blocking=true
process.instance.blocking=true
process.genericobject.blocking=true
process.volumestoragepoolmap.blocking=true
process.host.blocking=true
process.agent.activate.blocking=true
process.agent.reconnect.blocking=true

process.containerevent.priority=100
process.agent.reconnect.priority=200
process.instance.priority=50
process.externalhandler.create.priority=100
process.externalhandler.deactivate.priority=100
process.externalhandler.purge.priority=100
process.externalhandler.remove.priority=100
process.purge.priority=-100

instance.compute.tries=5

agent.activate.ping.retries=30
agent.activate.ping.timeout=2000

docker.network.create.account.types=project
docker.vip.subnet.cidr=169.254.64.0/18

machine.service.executable=go-machine-service
machine.execute=false

machine.driver.config=file:///var/lib/rancher/etc/machinedrivers.json

compose.executor.service.executable=rancher-compose-executor
compose.executor.execute=false

catalog.service.executable=rancher-catalog-service
catalog.execute=false

traefik.executable=traefik
traefik.execute=false

access.log=/dev/null

cluster.id.file=${cattle.home}/etc/cluster-id

# If you change this change rancher/server's server/Dockerfile too
catalog.url={"catalogs":{"community":{"url":"https://git.rancher.io/community-catalog.git","branch":"master"},"library":{"url":"https://git.rancher.io/rancher-catalog.git","branch":"development"}}}
catalog.refresh.interval.seconds=300

telemetry.service.executable=telemetry

registry.default=
registry.whitelist=

auth.service.executable=rancher-auth-service
auth.service.execute=false

api.auth.local.validate.url=
api.auth.local.validate.description=
api.auth.local.validate.timeout.milliseconds=10000

webhook.service.executable=webhook-service
webhook.service.execute=false

api.auth.restrict.concurrent.sessions=false

websocket.proxy.execute=true

# From ./META-INF/cattle/redis/cattle-defaults.properties

redis.hosts=localhost
redis.password=
redis.timeout=2000
redis.retry.millis=60000

# From ./META-INF/cattle/service-upgrade/cattle-defaults.properties

upgrade.cleanup.after=120
task.upgrade.cleanup.schedule=3600
# From ./META-INF/cattle/system/cattle-defaults.properties

module.profile.dbload=true
dbcp.jmx.prefix=org.apache.commons.dbcp:ManagedBasicDataSource=
system.stack.catalog.url=http://localhost:8088/v1-catalog/templates/
system.stack.catalog.versions.url=http://localhost:8088/v1-catalog/templateversions/
system.stack.auth.url=http://localhost:8090/v1-auth

# From ./META-INF/cattle/system-services/cattle-defaults.properties

agent.resources=host,storagePool
agent.instance.image.uuid=docker:${agent.instance.image}
lb.instance.image.uuid=docker:${lb.instance.image}
agent.instance.name=Network Agent

agent.instance.start.items.apply=configscripts,services,agent-instance-scripts,monit
agent.instance.start.items.increment=agent-instance-startup

agent.instance.services.base.items=${agent.instance.start.items.apply},${agent.instance.start.items.increment}

agent.instance.services.processes=nic.activate,nic.deactivate,instance.start,instance.stop,instancehostmap.activate,instancelink.update,instancelink.activate,hostipaddressmap.activate,serviceexposemap.create,serviceconsumemap.create,serviceconsumemap.update,serviceconsumemap.remove,service.activate,service.deactivate,service.update,service.remove,healthcheckinstancehostmap.create,networkserviceproviderinstancemap.activate,networkserviceproviderinstancemap.remove,ipaddress.update,host.create,host.update,host.remove,instance.updateunhealthy,instance.updatehealthy,account.update,instance.remove,healthcheckinstancehostmap.remove

ipaddress.update.agentInstanceProvider.ipsecTunnelService.increment=hosts,ipsec-hosts,ipsec

nic.activate.agentInstanceProvider.base.items=true

nic.activate.agentInstanceProvider.dnsService.apply=node-services
nic.activate.agentInstanceProvider.dnsService.increment=hosts,iptables

nic.deactivate.agentInstanceProvider.dnsService.apply=
nic.deactivate.agentInstanceProvider.dnsService.increment=hosts

nic.activate.agentInstanceProvider.dhcpService.apply=
nic.activate.agentInstanceProvider.dhcpService.increment=hosts

nic.activate.agentInstanceProvider.ipsecTunnelService.apply=ipsec
nic.activate.agentInstanceProvider.ipsecTunnelService.increment=ipsec-hosts

hostipaddressmap.activate.agentInstanceProvider.ipsecTunnelService.increment=ipsec-hosts

host.agent.instance.services.processes=instancehostmap.activate,instancehostmap.deactivate,port.update,port.activate,port.deactivate,ipassociation.activate,ipassociation.deactivate

host.port.activate.agentInstanceProvider.portService.increment=host-iptables
host.port.update.agentInstanceProvider.portService.increment=host-iptables
host.port.deactivate.agentInstanceProvider.portService.increment=host-iptables
host.instancehostmap.activate.agentInstanceProvider.portService.increment=host-routes
host.instancehostmap.activate.agentInstanceProvider.hostNatGatewayService.increment=host-routes,host-iptables
host.instancehostmap.deactivate.agentInstanceProvider.hostNatGatewayService.increment=host-routes,host-iptables

host.ipassociation.activate.agentInstanceProvider.hostNatGatewayService.increment=host-routes,host-iptables
host.ipassociation.deactivate.agentInstanceProvider.hostNatGatewayService.increment=host-routes,host-iptables

serviceconsumemap.create.agentInstanceProvider.dnsService.increment=hosts
serviceconsumemap.remove.agentInstanceProvider.dnsService.increment=hosts
serviceconsumemap.update.agentInstanceProvider.dnsService.increment=hosts
serviceexposemap.create.agentInstanceProvider.dnsService.increment=hosts
serviceexposemap.remove.agentInstanceProvider.dnsService.increment=hosts
instancelink.update.agentInstanceProvider.dnsService.increment=hosts
service.activate.agentInstanceProvider.dnsService.increment=hosts
service.deactivate.agentInstanceProvider.dnsService.increment=hosts
service.update.agentInstanceProvider.dnsService.increment=hosts
service.remove.agentInstanceProvider.dnsService.increment=hosts
networkserviceproviderinstancemap.activate.agentInstanceProvider.dnsService.increment=hosts
networkserviceproviderinstancemap.remove.agentInstanceProvider.dnsService.increment=hosts
host.create.agentInstanceProvider.dnsService.increment=hosts
host.update.agentInstanceProvider.dnsService.increment=hosts
host.remove.agentInstanceProvider.dnsService.increment=hosts
instance.updatehealthy.agentInstanceProvider.dnsService.increment=hosts
instance.updateunhealthy.agentInstanceProvider.dnsService.increment=hosts
account.update.agentInstanceProvider.dnsService.increment=hosts
instance.remove.agentInstanceProvider.dnsService.increment=hosts
instancehostmap.activate.agentInstanceProvider.dnsService.increment=hosts
healthcheckinstancehostmap.create.agentInstanceProvider.dnsService.increment=hosts
healthcheckinstancehostmap.remove.agentInstanceProvider.dnsService.increment=hosts

metadata.increment.processes=account.update, \
    healthcheckinstancehostmap.create, \
    host.create, \
    hostipaddressmap.activate, \
    host.remove, \
    host.update, \
    instancehostmap.activate, \
    instancehostmap.deactivate, \
    instancelink.update, \
    instance.remove, \
    instance.start, \
    instance.stop, \
    instance.updatehealthy, \
    instance.updateunhealthy, \
    ipaddress.update, \
    ipassociation.activate, \
    ipassociation.deactivate, \
    network.update, \
    nic.activate, \
    nic.deactivate, \
    port.activate, \
    port.deactivate, \
    port.update, \
    service.activate, \
    serviceconsumemap.create, \
    serviceconsumemap.remove, \
    serviceconsumemap.update, \
    service.deactivate, \
    serviceexposemap.create, \
    serviceexposemap.remove, \
    service.remove, \
    service.update

item.wait.for.event.tries=3
item.wait.for.event.timeout.millis=7500
item.sync.batch.size=100
item.migration.block.on.failure=false
item.priority=configscripts
docker.index.url=https://index.docker.io
docker.index.server=index.docker.io
docker.index.user=
docker.index.pass=

eventing.retry=1
eventing.timeout.millis=45000
eventing.pool.default.count=500

eventing.reply.pool.maxtotal=1000000
eventing.reply.pool.maxidle=1000
hazelcast.group.name=
hazelcast.group.password=
hazelcast.jmx=true
hazelcast.logging.type=slf4j

module.profile.hazelcast.config.basic=true
module.profile.hazelcast.config.custom=false
module.profile.hazelcast.lock=false
module.profile.hazelcast.eventing=false

graphite.host=
graphite.port=2003
graphite.options=
jmx.trans.export.interval.seconds=30
jmx.trans.query.interval.seconds=5
mac.unassigned.prefix=04
mac.prefix.start=02:00:01
mac.prefix.end=02:ff:ff

link.internal.port.start=20000
link.internal.port.end=39999

host.port.start=20000
host.port.end=39999

environment.services.port.range=49153-65535

instance.link.target.wait.time.millis=15000

ipsec.psk.byte.length=16

ha.instance.state.cache.millis=300000
ha.host.id.cache.millis=3600000

# 10 years
registration.token.period.millis=315360000000
process.account.create.register.token.account.kinds=admin,user
docker.register.command=sudo docker run --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher %s %s

agent.image=cattle/agent:latest
agent.instance.register.script=registration/registration.sh
agent.instance.register.url=

sample.setup=true

task.project.template.reload.schedule=300

task.purge.resources.schedule=60
task.remove.resources.schedule=60
remove.resources.after=300
task.resource.change.monitor.schedule=120
resource.monitor.default.wait.millis=45000

task.retry.timeout.schedule=1
service.remove.wait.time.millis=60000
service.activate.wait.time.millis=60000
service.deactivate.wait.time.millis=60000

service.create.schema.allowed.types=\
    string,int,enum,password,float,date,boolean,json, \
    map[string],map[int],map[enum],map[password],map[float],map[date],map[boolean], \
    array[string],array[int],array[enum],array[password],array[float],array[date],array[boolean]

# 1 week
task.purge.after.seconds=604800
# 1 Day
task.cleanup.task.instances.schedule=86400
zookeeper.lock.path=/cattle/locks
zookeeper.stale.lock.seconds=60
task.zookeeper.cleanup.schedule=900

zookeeper.connection.timeout.millis=30000
zookeeper.connection.string=localhost
zookeeper.session.timeout.millis=30000
zookeeper.sleep.between.retry.time=1000
zookeeper.retries=3

project.template.defaults=true

cluster.default.port=9345
cluster.checkin.seconds=5
cluster.checkin.misses=3
cluster.default.http.port=8080
# From ./META-INF/cattle/system-services/healthcheck-cattle-defaults.properties

task.healthcheck.cleanup.schedule=60

# do not set to "managed" that will cause a loop
default.managed.network=bridge

allowed.user.agent.uri.prefix=
